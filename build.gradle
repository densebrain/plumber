
buildscript {
    repositories {
		mavenLocal()
		mavenCentral()
		maven { url "http://repo.spring.io/snapshot" }
        maven { url "http://repo.spring.io/milestone" }
        maven { url "http://repo.spring.io/libs-release" }
        maven { url 'http://repos.zeroturnaround.com/nexus/content/groups/zt-public/' }
        

    }

    dependencies {
        classpath group: 'org.zeroturnaround', name: 'gradle-jrebel-plugin', version: '1.1.2'
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.2.0.RC2")
    }
}

//Setup the repos for all projects
allprojects {
    repositories {
        mavenLocal()
        mavenCentral()
        maven { url "http://repo.spring.io/milestone" }
        maven { url "http://repo.spring.io/snapshot" }
        maven { url "http://repo.spring.io/libs-release" }
    }


    apply plugin: 'java'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8
    version = '1.0'

    buildDir = new File(projectDir, 'target')
    buildDir.mkdirs()
}

//Setup the actual artifact creation projects
subprojects {

    apply plugin: 'groovy'
    apply plugin: 'rebel'


    generateRebel.mustRunAfter(classes)


}

configure(subprojects.findAll {it.name != 'client' && it.name != 'common'}) {
    apply plugin: 'spring-boot'

    bootRepackage {
        mainClass = 'org.plumber.common.Application'
    }

    springBoot {
        mainClass = 'org.plumber.common.Application'
    }

    bootRun {
        if ( project.hasProperty('jvmArgs') ) {
            jvmArgs project.jvmArgs.split('\\s+')
        }
    }
}

project(':plumber:client') {

    dependencies {
        compile "org.glassfish.jersey.media:jersey-media-moxy:${jerseyVersion}"
        compile "org.glassfish.jersey.media:jersey-media-json-jackson:${jerseyVersion}"
    }
}

project(':plumber:pipes') {

    dependencies {
        compile project(':plumber:client')

        compile group: 'org.slf4j', name: 'slf4j-api', version: slf4jVersion

        compile "org.reflections:reflections:0.9.9-RC1"
        compile 'com.amazonaws:aws-java-sdk:1.9.6'

        compile 'org.codehaus.groovy.modules.http-builder:http-builder:0.7.2'
        compile ("org.glassfish.jersey.containers:jersey-container-servlet:${jerseyVersion}") {
            exclude group: 'javax.validation'
        }

        compile 'javax.servlet:javax.servlet-api:3.1.0'

        compile group: 'org.springframework', name: 'spring-webmvc', version:springVersion

        testCompile group: 'junit', name: 'junit', version: '4.11'
    }


}

//Setup the final artifact projects
project(':plumber:worker') {

    dependencies {
        compile project(':plumber:pipes')
        compile "org.springframework.boot:spring-boot-starter"
        compile "org.springframework.boot:spring-boot-starter-tomcat"
        compile "org.springframework.boot:spring-boot-starter-web"

        compile("org.apache.tomcat.embed:tomcat-embed-jasper") {
            exclude group: 'javax.servlet'
        }

        compile ('org.glassfish.jersey.ext:jersey-spring3') {
            exclude module: 'spring-web'
            exclude group: 'javax.validation'
        }

        testCompile "org.springframework.boot:spring-boot-starter-test"

    }
}

project(':plumber:manager') {
    dependencies {
        compile project(':plumber:worker')
    }
}
